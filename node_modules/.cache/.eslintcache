[{"/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/index.js":"1","/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/component/app.js":"2","/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/component/products.js":"3","/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/component/cart.js":"4"},{"size":190,"mtime":1653993727475,"results":"5","hashOfConfig":"6"},{"size":175,"mtime":1653993725531,"results":"7","hashOfConfig":"6"},{"size":8353,"mtime":1659670617888,"results":"8","hashOfConfig":"6"},{"size":7213,"mtime":1665740232733,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hyrjjv",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":3,"source":"23"},"/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/index.js",[],[],"/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/component/app.js",[],[],"/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/component/products.js",["24","25","26","27","28","29"],[],"import React from \"react\";\nimport { useState } from \"react\";\n\nimport data from '../data.json'\nimport Cart from \"./cart\";\n\n\n\n\n//function component uses:-\n\nfunction Products() {\n    let [allProduct, setallProduct] = useState(data.products);\n    let [isCart, setisCart] = useState([]);\n    let [isActive, setisActive] = useState(\"\");\n\n    function rangefilter(event) {\n        let range = event.target.value\n        console.log(range)\n\n        if (range === \"Highest to Lowest\") {\n            let HightoLow = data.products.sort((p, q) => q.price - p.price)\n            console.log(HightoLow)\n            //allProduct = HightoLow\n             setallProduct(HightoLow)\n        }\n\n        if (range == \"Lowest to Highest\") {\n            let LowtoHigh = data.products.sort((p, q) => p.price - q.price)\n            console.log(LowtoHigh)\n            setallProduct(LowtoHigh)\n        }\n    }\n\n\n    function handlecart(event) {\n        let id = event.target.id;\n        let prodctlist = data.products.filter((a) => a.id == id)\n        prodctlist[0].Qty = 1\n        setisCart(isCart.concat(prodctlist))\n    }\n\n\n    function handlesize(event) {\n        let size = event.target.innerText\n        console.log(size)\n        let filtersize = data.products.filter((fsize) => fsize.availableSizes.includes(size))\n    \n        setallProduct(filtersize)\n        setisActive(size)\n    }\n\n\n    return (\n\n        <main>\n            <div className=\"cart\">\n                <Cart info={isCart} />\n            </div>\n            <div className=\"filter-btn\">\n                <div>\n                    <div className=\"size-btns\">\n                        <div className=\"sizetitle\">\n                            <p>Sizes:</p>\n                        </div>\n                        {\n                            [\"S\", \"XS\", \"M\", \"X\", \"L\", \"XL\", \"XXL\"].map((size) => {\n                                return (\n                                    <>\n                                        <button onClick={handlesize} className={isActive == size ? \"btnactive size-btn\" : \"size-btn\"} >{size}</button>\n                                    </>\n                                )\n                            })\n                        }\n                    </div>\n                    <div className=\"filterrange\">\n                        <p className=\"rangetitle\">Order By:</p>\n                        <select onChange={rangefilter} >\n                            <option>Select</option>\n                            <option value=\"Highest to Lowest\">\n                                Highest to Lowest\n                            </option>\n                            <option value=\"Lowest to Highest\">\n                                Lowest  to Highest\n                            </option>\n                        </select>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"length\">\n                <p>{allProduct.length} Products find</p>\n            </div>\n\n            <div className=\"product\">\n\n\n                {\n\n                    allProduct.map((product) => {\n\n                        return (\n\n                            <div className=\"products\" id={product.id} >\n\n                                <figure>\n                                    <img src={'/static/products/' + `${product.sku}` + '_1.jpg'}></img>\n                                </figure>\n\n                                <p className=\"producttitle\">{product.title}</p>\n                                <p className=\"productprice\">Price:{product.currencyFormat}{product.price}</p>\n                                <button className=\"addcartbtn\" id={product.id} onClick={handlecart}>Add To Cart</button>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </main>\n    )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n//class function component uses:-\n\n// class Products extends React.Component {\n//     constructor(props) {\n//         super(props)\n//         this.state = ({\n//             products: data.products,\n//             cart: true,\n//             list: [],\n//         })\n//     }\n\n//     handlesize = (event) => {\n//         let size = event.target.innerText\n//         let filtersize = data.products.filter((fsize) => fsize.availableSizes.includes(size))\n//         this.setState({\n//             products: filtersize,\n//         })\n//         console.log(filtersize)\n//     }\n\n//     handlecart = (event) => {\n//         let id = event.target.id;\n//         let prodctlist = data.products.filter((a) => a.id == id)\n//         prodctlist[0].Qty = 1\n//         this.setState({\n//             list: this.state.list.concat(prodctlist)\n//         })\n//         // console.log(this.state.list)\n//     }\n\n\n//     handlerange = (event) => {\n//         let range = event.target.value\n//         let incorder = data.products.sort((a, b) => b.price - a.price)\n//         let desorder = data.products.sort((a, b) => a.price - b.price)\n\n//         if (range === \"Highest to Lowest\") {\n//             this.setState(\n//                 { products: data.products.sort((a, b) => b.price - a.price) }\n//             )\n//         }\n//         if (range === \"Lowest to Highest\") {\n//             this.setState({\n//                 products: data.products.sort((a, b) => a.price - b.price)\n//             })\n//         }\n\n//         console.log(range)\n//     }\n\n\n//     render() {\n//         return (\n\n//             <main>\n//                 <div className=\"cart\">\n//                     <Cart info={this.state.list} />\n//                 </div>\n//                 <div className=\"filter-btn\">\n//                     <div>\n//                         <div className=\"size-btns\">\n//                             <div className=\"sizetitle\">\n//                                 <p>Sizes:</p>\n//                             </div>\n//                             {\n//                                 [\"S\", \"XS\", \"M\", \"X\", \"L\", \"XL\", \"XXL\"].map((size) => {\n//                                     return (\n//                                         <>\n//                                             <button className=\"size-btn\" onClick={(event) => { this.handlesize(event) }}>{size}</button>\n//                                         </>\n//                                     )\n//                                 })\n//                             }\n//                         </div>\n//                         <div className=\"filterrange\">\n//                             <p className=\"rangetitle\">Order By:</p>\n//                             <select onChange={(event) => { this.handlerange(event) }}  >\n\n//                                 <option>Select</option>\n//                                 <option value=\"Highest to Lowest\">\n//                                     Highest to Lowest\n//                                 </option>\n//                                 <option value=\"Lowest to Highest\">\n//                                     Lowest  to Highest\n//                                 </option>\n//                             </select>\n//                         </div>\n//                     </div>\n\n//                 </div>\n//                 <div className=\"length\">\n//                     <p>{this.state.products.length} Products find</p>\n//                 </div>\n\n//                 <div className=\"product\">\n\n\n//                     {\n\n//                         this.state.products.map((product) => {\n\n//                             return (\n\n//                                 <div className=\"products\" id={product.id} >\n\n//                                     <figure>\n//                                         <img src={'/static/products/' + `${product.sku}` + '_1.jpg'}></img>\n//                                     </figure>\n\n//                                     <p className=\"producttitle\">{product.title}</p>\n//                                     <p className=\"productprice\">Price:{product.currencyFormat}{product.price}</p>\n//                                     <button className=\"addcartbtn\" id={product.id} onClick={(event) => { this.handlecart(event) }}>Add To Cart</button>\n//                                 </div>\n//                             )\n//                         })\n//                     }\n//                 </div>\n//             </main>\n//         )\n//     }\n// }\n\nexport default Products;","/home/adarsh/Desktop/React/Shopping-cart/Shopping-Card/src/component/cart.js",["30","31","32","33","34","35","36","37"],[],"import React from \"react\";\nimport { useState } from \"react\";\n// import data from '../data.json'\n\n\n\n//function component uses:-\n\n\n\n\nfunction Cart(props) {\n\n    let [display, setdisplay] = useState(false)\n    let [changeqty, setchangeqty] = useState(false)\n    let [cart, setcart] = useState([])\n\n\n\n    function handleclick() {\n        setdisplay(true);\n        setcart(props.info)\n    }\n    \n    function handledelete() {\n        setdisplay(false)\n        setchangeqty(false)\n    }\n\n    function handleInc(event) {\n        let id = event.target.id\n        let singleProduct = props.info.filter((p) => p.id == id);\n        singleProduct[0].Qty = singleProduct[0].Qty + 1;\n        setchangeqty(true)\n        setcart([...cart], singleProduct[0])\n    }\n    function handleDec(event) {\n        let id = event.target.id;\n        let singleProduct = props.info.filter((p) => p.id === id)\n        if (singleProduct[0].Qty > 1) {\n            singleProduct[0].Qty = singleProduct[0].Qty - 1;\n        }\n        setcart([...cart], singleProduct[0])\n        setchangeqty(true)\n    }\n    function handlecheckout() {\n       \n        alert( [...new Set (cart)].reduce((acc,cv)=>{\n            acc =  acc + cv.price * cv.Qty\n            return acc\n        },0))\n    }\n\n\n    return (\n        <>\n            {display === false ? (\n                <div >\n                    <figure>\n                        <img className=\"bagicon\" onClick={handleclick} src={'/static/bag-icon.png'} ></img>\n                    </figure>\n                    <small className=\"cartlength\">{[... new Set(props.info)].length}</small>\n                </div>\n\n            ) : (\n                <div className=\"cartcategory\">\n                    <div className=\"shoppingsummary\">\n                        <p className=\"summary\">Shopping Summary</p>\n                        <button onClick={handledelete}>❌</button>\n                    </div>\n\n                    {\n                        [... new Set(cart)].map((a) => {\n                            return (\n                                <div className=\"cartlist\">\n                                    <img className=\"cartproductimg\" src={'/static/products/' + `${a.sku}` + '_1.jpg'}></img>\n                                    <p>Title: {a.title}</p>\n                                    <p>Sizes: {a.availableSizes}</p>\n\n                                    {\n                                        changeqty === true ?\n                                            <p>Quantity:{a.Qty}</p>\n                                            :\n                                            <p>Quantity:{a.Qty}</p>\n                                    }\n                                    <button id={a.id} onClick={handleInc}>+</button>\n                                    <button id={a.id} onClick={handleDec}>-</button>\n                                    <p>Price:{a.currencyFormat}{a.price}</p>\n\n                                </div>\n                            )\n                        })}\n\n                    <div className=\"shoppingsummary\">\n                        <p className=\"summary\">SubTotal: {[... new Set(props.info)].reduce((acc, cv) => {\n                            acc = acc + cv.price * cv.Qty\n                            return acc;\n                        }, 0)}</p>\n                        <button onClick={handlecheckout} >\n\n                            \n                            Checkout</button>\n                    </div>\n                </div>\n            )}\n        </>\n    )\n\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\n\n\n//class component uses:-\n\n// class Cart extends React.Component {\n//     constructor(props) {\n//         super()\n//         this.state = ({\n//             istrue: true,\n//             incdec:false\n\n//         })\n//     }\n\n\n//     handletrue = () => {\n//         this.setState({\n//             istrue: !this.state.istrue\n//         })\n//     }\n\n\n//     handleremove = () => {\n//         this.setState({\n//             istrue: !this.state.istrue\n//         })\n//     }\n\n//     handleInc = (event) => {\n//         let id = event.target.id;\n//         let singleProduct = data.products.filter((p) => p.id == id);\n//         singleProduct[0].Qty = singleProduct[0].Qty + 1;\n//         this.setState({\n//           incdec: true,\n//         });\n//       };\n//       handleDec = (event) => { \n//         let id = event.target.id;\n//         let singleProduct = data.products.filter((p) => p.id == id);\n//         if(singleProduct[0].Qty>1){\n//         singleProduct[0].Qty = singleProduct[0].Qty - 1;\n//         }\n\n//         console.log(singleProduct[0].Qty);\n//         this.setState({\n//           incdec: true,\n//         });\n//       };\n\n\n//     render() {\n//         return (\n//             <>\n//                 <div >\n//                     <figure>\n//                         <img className=\"bagicon\" onClick={this.handletrue} src={'/static/bag-icon.png'} ></img>\n//                     </figure>\n//                     <small className=\"cartlength\">{[... new Set(this.props.info)].length}</small>\n//                 </div>\n\n//                 {\n//                     this.state.istrue ? \"\"\n//                         :\n//                         <div className=\"cartcategory\">\n//                             <div className=\"shoppingsummary\">\n//                                 <p className=\"summary\">Shopping Summary</p>\n//                                 <button onClick={this.handleremove}>❌</button>\n//                             </div>\n\n//                             {\n//                                 [... new  Set(this.props.info)].map((a) => {\n//                                     return (\n//                                         <div className=\"cartlist\">\n//                                         <img className=\"cartproductimg\" src={'/static/products/' + `${a.sku}` + '_1.jpg'}></img>\n//                                             <p>{a.title}</p>\n//                                             {/* <p>Quantity:1</p> */}\n//                                             {\n//                                                 this.state.incdec===true?\n//                                                 <p>Quantity:{a.Qty}</p>:<p>Quantity:{a.Qty}</p>\n//                                             }\n//                                             <button id={a.id} onClick={this.handleInc}>+</button>\n//                                             <button id={a.id} onClick={this.handleDec}>-</button>\n//                                             <p>Price:{a.currencyFormat}{a.price}</p>\n\n//                                         </div>\n//                                     )\n//                                 })\n//                             }\n//                             <div className=\"shoppingsummary\">\n//                                 <p className=\"summary\">SubTotal: { [... new  Set(this.props.info)].reduce((acc, cv) => {\n//                                     acc = acc + cv.price *cv.Qty\n//                                     return acc;\n//                                 }, 0)}</p>\n//                             </div>\n//                         </div>\n//                 }\n//             </>\n//         )\n//     }\n\n// }\n\nexport default Cart",{"ruleId":"38","severity":1,"message":"39","line":28,"column":19,"nodeType":"40","messageId":"41","endLine":28,"endColumn":21},{"ruleId":"38","severity":1,"message":"39","line":38,"column":59,"nodeType":"40","messageId":"41","endLine":38,"endColumn":61},{"ruleId":"38","severity":1,"message":"39","line":70,"column":90,"nodeType":"40","messageId":"41","endLine":70,"endColumn":92},{"ruleId":"42","severity":1,"message":"43","line":107,"column":37,"nodeType":"44","endLine":107,"endColumn":98},{"ruleId":"45","severity":1,"message":"46","line":107,"column":67,"nodeType":"40","messageId":"47","endLine":107,"endColumn":68},{"ruleId":"45","severity":1,"message":"46","line":107,"column":86,"nodeType":"40","messageId":"47","endLine":107,"endColumn":87},{"ruleId":"38","severity":1,"message":"39","line":32,"column":59,"nodeType":"40","messageId":"41","endLine":32,"endColumn":61},{"ruleId":"42","severity":1,"message":"43","line":60,"column":25,"nodeType":"44","endLine":60,"endColumn":102},{"ruleId":"48","severity":1,"message":"49","line":62,"column":56,"nodeType":"50","messageId":"51","endLine":62,"endColumn":57,"fix":"52"},{"ruleId":"48","severity":1,"message":"49","line":73,"column":29,"nodeType":"50","messageId":"51","endLine":73,"endColumn":30,"fix":"53"},{"ruleId":"42","severity":1,"message":"43","line":76,"column":37,"nodeType":"44","endLine":76,"endColumn":119},{"ruleId":"45","severity":1,"message":"46","line":76,"column":94,"nodeType":"40","messageId":"47","endLine":76,"endColumn":95},{"ruleId":"45","severity":1,"message":"46","line":76,"column":107,"nodeType":"40","messageId":"47","endLine":76,"endColumn":108},{"ruleId":"48","severity":1,"message":"49","line":95,"column":63,"nodeType":"50","messageId":"51","endLine":95,"endColumn":64,"fix":"54"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"55","text":"56"},{"range":"57","text":"56"},{"range":"58","text":"56"},[1555,1556],"",[1948,1949],[3109,3110]]